{"ast":null,"code":"var _jsxFileName = \"/home/arlen/tryber-exercises/front-end/gerenciar-estado-redux/bloco_16/dia_4/exercise-game-of-thrones-characters/src/components/CharacterInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    //faça a desestruturação das props aqui\n    const {\n      loading,\n      character,\n      error\n    } = this.props;\n\n    if (!loading && character) {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, \"Name: \", character.name), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }, \"Gender: \", character.gender), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, \"Aliases: \", character.aliases.map((alias, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: `${alias}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 65\n        }\n      }, alias))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, \"Books: \", character.books.map((book, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: `${book}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 60\n        }\n      }, book))));\n    }\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }, error);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"Type a character name and click to search!\");\n  }\n\n}\n\n; //mapeie o estado global para a propriedade da sua aplicação\n\nconst mapStateToProps = state => ({\n  loading: state.characterReducer.loading,\n  character: state.characterReducer.character,\n  error: state.characterReducer.error\n}); // conecte este componente ao redux\n\n\nexport default connect(mapStateToProps)(CharacterInfo);\nCharacterInfo.propTypes = {\n  loading: propTypes.bool.isRequired,\n  character: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string\n};\nCharacterInfo.defaultProps = {\n  character: null,\n  error: null\n};","map":{"version":3,"sources":["/home/arlen/tryber-exercises/front-end/gerenciar-estado-redux/bloco_16/dia_4/exercise-game-of-thrones-characters/src/components/CharacterInfo.js"],"names":["React","connect","propTypes","CharacterInfo","Component","render","loading","character","error","props","name","gender","aliases","map","alias","index","books","book","mapStateToProps","state","characterReducer","bool","isRequired","arrayOf","object","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA;AAAtB,QAAgC,KAAKC,KAA3C;;AACA,QAAI,CAACH,OAAD,IAAYC,SAAhB,EAA2B;AACzB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWA,SAAS,CAACG,IAArB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaH,SAAS,CAACI,MAAvB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAcJ,SAAS,CAACK,OAAV,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,kBAAkB;AAAG,QAAA,GAAG,EAAG,GAAED,KAAM,IAAGC,KAAM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BD,KAA9B,CAAxC,CAAd,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYP,SAAS,CAACS,KAAV,CAAgBH,GAAhB,CAAoB,CAACI,IAAD,EAAOF,KAAP,kBAAiB;AAAG,QAAA,GAAG,EAAG,GAAEE,IAAK,IAAGF,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BE,IAA7B,CAArC,CAAZ,CAJF,CADF;AAQD;;AACD,QAAIT,KAAJ,EAAW;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAN,CAAP;AAA4B;;AACzC,QAAIF,OAAJ,EAAa;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AAA+B;;AAC9C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACD;;AAjByC;;AAkB3C,C,CAED;;AACA,MAAMY,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACC,gBAAN,CAAuBd,OADE;AAElCC,EAAAA,SAAS,EAAEY,KAAK,CAACC,gBAAN,CAAuBb,SAFA;AAGlCC,EAAAA,KAAK,EAAEW,KAAK,CAACC,gBAAN,CAAuBZ;AAHI,CAAZ,CAAxB,C,CAMA;;;AACA,eAAeP,OAAO,CAACiB,eAAD,CAAP,CAAyBf,aAAzB,CAAf;AAEAA,aAAa,CAACD,SAAd,GAA0B;AACxBI,EAAAA,OAAO,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UADA;AAExBf,EAAAA,SAAS,EAAEL,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,CAFa;AAGxBhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB;AAHO,CAA1B;AAMAtB,aAAa,CAACuB,YAAd,GAA6B;AAC3BnB,EAAAA,SAAS,EAAE,IADgB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAA7B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    //faça a desestruturação das props aqui\n    const { loading, character, error } = this.props;\n    if (!loading && character) {\n      return (\n        <ul>\n          <li>Name: {character.name}</li>\n          <li>Gender: {character.gender}</li>\n          <li>Aliases: {character.aliases.map((alias, index) => <p key={`${alias}-${index}`}>{alias}</p>)}</li>\n          <li>Books: {character.books.map((book, index) => <p key={`${book}-${index}`}>{book}</p>)}</li>\n        </ul>\n      )\n    }\n    if (error) { return <div>{error}</div>; }\n    if (loading) { return <div>Loading...</div>; }\n    return <div>Type a character name and click to search!</div>;\n  }\n};\n\n//mapeie o estado global para a propriedade da sua aplicação\nconst mapStateToProps = (state) => ({ \n  loading: state.characterReducer.loading,\n  character: state.characterReducer.character,\n  error: state.characterReducer.error,\n})\n\n// conecte este componente ao redux\nexport default connect(mapStateToProps)(CharacterInfo);\n\nCharacterInfo.propTypes = {\n  loading: propTypes.bool.isRequired,\n  character: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string,\n};\n\nCharacterInfo.defaultProps = {\n  character: null,\n  error: null,\n};"]},"metadata":{},"sourceType":"module"}