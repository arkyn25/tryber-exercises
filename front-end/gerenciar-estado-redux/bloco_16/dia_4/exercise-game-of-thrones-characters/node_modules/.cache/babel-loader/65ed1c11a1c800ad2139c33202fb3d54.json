{"ast":null,"code":"// src/actions/characterActions.js\nimport charAPI from '../services/charAPI';\nexport const SEARCH_BEGIN = 'SEARCH_BEGIN';\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\nexport const SEARCH_ERROR = 'SEARCH_ERROR';\nexport const searchBegin = characterSearched => ({\n  type: SEARCH_BEGIN,\n  loading: true,\n  characterSearched\n});\nexport const searchSuccess = character => ({\n  type: SEARCH_SUCCESS,\n  loading: false,\n  character\n});\nexport const searchFailure = error => ({\n  type: SEARCH_ERROR,\n  loading: false,\n  error\n});\nexport function thunkCharacter(name) {\n  return dispatch => {\n    dispatch(searchBegin(name));\n    return charAPI(name).then(character => dispatch(searchSuccess(character)), error => dispatch(searchFailure(error.message)));\n  };\n}\n;","map":{"version":3,"sources":["/home/arlen/tryber-exercises/front-end/gerenciar-estado-redux/bloco_16/dia_4/exercise-game-of-thrones-characters/src/actions/characterActions.js"],"names":["charAPI","SEARCH_BEGIN","SEARCH_SUCCESS","SEARCH_ERROR","searchBegin","characterSearched","type","loading","searchSuccess","character","searchFailure","error","thunkCharacter","name","dispatch","then","message"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,YAAY,GAAE,cAApB;AAEP,OAAO,MAAMC,WAAW,GAAIC,iBAAD,KACzB;AAAEC,EAAAA,IAAI,EAAEL,YAAR;AAAsBM,EAAAA,OAAO,EAAE,IAA/B;AAAqCF,EAAAA;AAArC,CADyB,CAApB;AAIP,OAAO,MAAMG,aAAa,GAAIC,SAAD,KAC3B;AAAEH,EAAAA,IAAI,EAAEJ,cAAR;AAAwBK,EAAAA,OAAO,EAAE,KAAjC;AAAwCE,EAAAA;AAAxC,CAD2B,CAAtB;AAIP,OAAO,MAAMC,aAAa,GAAIC,KAAD,KAC3B;AAAEL,EAAAA,IAAI,EAAEH,YAAR;AAAsBI,EAAAA,OAAO,EAAE,KAA/B;AAAsCI,EAAAA;AAAtC,CAD2B,CAAtB;AAIP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACV,WAAW,CAACS,IAAD,CAAZ,CAAR;AACA,WAAOb,OAAO,CAACa,IAAD,CAAP,CACJE,IADI,CAEFN,SAAD,IAAeK,QAAQ,CAACN,aAAa,CAACC,SAAD,CAAd,CAFpB,EAGFE,KAAD,IAAWG,QAAQ,CAACJ,aAAa,CAACC,KAAK,CAACK,OAAP,CAAd,CAHhB,CAAP;AAKD,GAPD;AAQD;AAAA","sourcesContent":["// src/actions/characterActions.js\nimport charAPI from '../services/charAPI';\nexport const SEARCH_BEGIN = 'SEARCH_BEGIN';\nexport const SEARCH_SUCCESS = 'SEARCH_SUCCESS';\nexport const SEARCH_ERROR= 'SEARCH_ERROR';\n\nexport const searchBegin = (characterSearched) => (\n  { type: SEARCH_BEGIN, loading: true, characterSearched }\n);\n\nexport const searchSuccess = (character) => (\n  { type: SEARCH_SUCCESS, loading: false, character }\n);\n\nexport const searchFailure = (error) => (\n  { type: SEARCH_ERROR, loading: false, error }\n);\n\nexport function thunkCharacter(name) {\n  return (dispatch) => {\n    dispatch(searchBegin(name));\n    return charAPI(name)\n      .then(\n        (character) => dispatch(searchSuccess(character)),\n        (error) => dispatch(searchFailure(error.message)),\n      );\n  };\n};"]},"metadata":{},"sourceType":"module"}